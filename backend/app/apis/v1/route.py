from fastapi import status
from fastapi.routing import APIRouter

from .model import InputCl, OutputCl

router = APIRouter(prefix="/v1")


from fastapi import UploadFile, File, Form
from pydantic import BaseModel, HttpUrl

class VideoUrlInput(BaseModel):
    video_url: HttpUrl

class VideoFileInput(BaseModel):
    description: str
    title: str

class TaskOutput(BaseModel):
    task_id: str

@router.post('/process_video_url',
             description='Обрабатывает видео по URL',
             tags=['Inference endpoints'],
             status_code=status.HTTP_202_ACCEPTED,
             response_model=TaskOutput)
def process_video_url(input_data: VideoUrlInput) -> TaskOutput:
    # Здесь должна быть логика создания задачи для обработки видео по URL
    task_id = "some_generated_task_id_for_url"  # This should be generated by your task queue system
    return TaskOutput(task_id=task_id)

@router.post('/process_video_file',
             description='Обрабатывает загруженное видео',
             tags=['Inference endpoints'],
             status_code=status.HTTP_202_ACCEPTED,
             response_model=TaskOutput)
async def process_video_file(
    file: UploadFile = File(...),
    description: str = Form(...),
    title: str = Form(...)
) -> TaskOutput:
    # Здесь должна быть логика создания задачи для обработки загруженного видео
    task_id = "some_generated_task_id_for_file"  # This should be generated by your task queue system
    return TaskOutput(task_id=task_id)
