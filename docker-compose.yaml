version: "3.9"

services:
  traefik:
    image: traefik:v2.11
    container_name: traefik
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./data/ssl:/letsencrypt
    restart: always

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - 80:80
    environment:
      API_URL: http://localhost:8080

  db:
    container_name: db-local
    image: postgres:15-alpine
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - ${ROOT_DIR}app_cache/db:/var/lib/postgresql/data
    restart: always

  api:
    build: 
      context: ./ml
      dockerfile: Dockerfile
    command: uvicorn app.main:app --host 0.0.0.0 --port 8080 --reload
    volumes:
      - ./ml/:/app
    ports:
      - "8080:8080"
    environment:
      - DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}
      - CELERY_BROKER_URL=pyamqp://rabbitmq:5672
      - CELERY_RESULT_BACKEND=rpc://rabbitmq:5672
    depends_on:
      - db

  celery_worker:
    restart: always
    build: 
      context: ./ml
      dockerfile: Dockerfile
    command: celery -A app.celery_worker worker --loglevel=info
    volumes:
      - ./ml/:/app
    depends_on:
      - rabbitmq
      - db
    environment:
      - DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}
      - CELERY_BROKER_URL=pyamqp://rabbitmq:5672
      - CELERY_RESULT_BACKEND=rpc://rabbitmq:5672

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
