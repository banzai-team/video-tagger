version: "3.9"

services:
  frontend:
    build: ./frontend
    ports:
      - 80:80
    environment:
      API_URL: http://localhost:4000

  redis:
    image: redis:7
    restart: always
    ports:
      - "6379:6379"
    #    volumes:
    #      - ./cache:/data
    environment:
      REDIS_PORT: 6379

  db:
    container_name: db-local
    image: postgres:15-alpine
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - ${ROOT_DIR}app/db:/var/lib/postgresql/data
    restart: always

  api:
    build: .
    command: python -m app.main
    volumes:
      - .:/app
    ports:
      - "8080:8080"
    environment:
      - DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}
      - CELERY_BROKER_URL=pyamqp://rabbitmq:5672
      - CELERY_RESULT_BACKEND=rpc://rabbitmq:5672
    depends_on:
      - db

  celery_worker:
    build: .
    command: celery -A app.celery_worker worker --loglevel=info
    volumes:
      - .:/app
    depends_on:
      - rabbitmq
      - db
    environment:
      - DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}
      - CELERY_BROKER_URL=pyamqp://rabbitmq:5672
      - CELERY_RESULT_BACKEND=rpc://rabbitmq:5672

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
